services:
    nginx:
        image: "nginx:latest"
        ports:
            - "${HTTP_PORT:-8000}:80"
            - "${SSL_PORT:-443}:443"
        environment:
            - SSL_PORT=${SSL_PORT:-443}
            - APP_SERVICE=${APP_SERVICE:-laravel.test}
            - SERVER_NAME=${SERVER_NAME:-localhost}
            - SSL_DOMAIN=${SSL_DOMAIN:-localhost}
            - SSL_ALT_NAME=${SSL_ALT_NAME:-DNS:localhost}
        volumes:
            - "./.dev/nginx/certs:/etc/nginx/certs"
            - "./.dev/nginx/templates:/etc/nginx/templates"
            - "./vendor/ryoluo/sail-ssl/nginx/generate-ssl-cert.sh:/docker-entrypoint.d/99-generate-ssl-cert.sh"
        depends_on:
            - ${APP_SERVICE:-laravel.test}
        networks:
            - sail
    laravel.test:
        build:
            context: "./vendor/laravel/sail/runtimes/8.3"
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: "sail-8.3/app"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - pgsql
            - redis
            - soketi
    pgsql:
        image: "postgres:17"
        ports:
            - "${FORWARD_DB_PORT:-5432}:5432"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
        volumes:
            - "sail-pgsql:/var/lib/postgresql/data"
            - "./vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - "-q"
                - "-d"
                - "${DB_DATABASE}"
                - "-U"
                - "${DB_USERNAME}"
            retries: 3
            timeout: 5s
    redis:
        #image: 'redis:alpine'
        image: "docker.dragonflydb.io/dragonflydb/dragonfly"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "sail-redis:/data"
        networks:
            - sail
        ulimits:
            memlock: -1
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    soketi:
        image: "quay.io/soketi/soketi:latest-16-alpine"
        environment:
            SOKETI_DEBUG: "${SOKETI_DEBUG:-1}"
            SOKETI_METRICS_SERVER_PORT: "9601"
            SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID}"
            SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY}"
            SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET}"
        ports:
            - "${PUSHER_PORT:-6001}:6001"
            - "${PUSHER_METRICS_PORT:-9601}:9601"
        networks:
            - sail
    # python-ocr:
    #   build:
    #     context: ./python
    #     dockerfile: Dockerfile
    #   volumes:
    #     - ./python:/app
    #     - ./storage/app/private:/app/shared
    #     - sail-paddle:/root/.paddleocr # Changed to use sail- prefix
    #   environment:
    #     - DB_CONNECTION=${DB_CONNECTION}
    #     - DB_HOST=pgsql
    #     - DB_PORT=${DB_PORT}
    #     - DB_DATABASE=${DB_DATABASE}
    #     - DB_USERNAME=${DB_USERNAME}
    #     - DB_PASSWORD=${DB_PASSWORD}
    #   networks:
    #     - sail
    #   depends_on:
    #     - pgsql
    #     - laravel.test
networks:
    sail:
        driver: bridge
volumes:
    sail-nginx:
        driver: local
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
    # sail-paddle: # Added new volume with sail- prefix
    #   driver: local
